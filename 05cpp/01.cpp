/*
 * 内联函数和宏
 * 2016年12月22日17:26:46
*/

#include <iostream>

using namespace std;

int main()
{
    cout << "Hello World!" << endl;
    return 0;
}

/*
 * 当程序执行函数调用的时候，系统需要建立栈空间，保护现场，
 * 传递参数以及控制程序执行的转移等等
 *
 * 这些工作需要系统时间和空间的开销
 * 存在这样的需求：
 * 函数代码很短，但是使用频率很高，程序频繁调用该函数所花费的时间却很多
 * 使得程序执行的效率很低
 *
 * “内联函数” 编译器完成对函数的展开
*/

/*
 * “内联函数” 和 “带参数的宏” 的区别
 * 1.内联函数需要对参数类型进行检查，宏只是进行简单的替换
 * 2.内联函数是在编译的时候，对代码进行展开的，宏是在预处理的时候进行替换的
*/

/*
 * C++ 高层次编程推荐：
 * 使用const, enum, inline替换宏
 *
 * 低层次编程：宏仍然是灵活的
*/
